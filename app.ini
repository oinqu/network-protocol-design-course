[CONFIG]
##### App settings #####
# Mandatory - Location of a log file which is created when application is started.
log_file = log/app.log

# Mandatory - Location of a files directory for downloads.
# Directory is created when receiving a file fr the first time.
files_dir = files/


##### Packet settings #####
# Mandatory - Size of a packet payload in bytes.
# All payloads which exceed this size will be segmented and sent over in segments.
packet_payload_size_bytes = 100

# Mandatory - Packet maximum number of hops, after which the packet is automatically dropped.
# This is a safety measure to prevent the packet looping.
max_packet_hops = 1000

# Mandatory - The socket buffer size in bytes. The buffer must fit the entire single incoming packet.
buffer_size = 256

# Mandatory - Packets encoding standard. Everything sent and received over the wire will be encoded
# and decoded using encoding standard defined here.
encoding = ascii


##### Heartbeat settings #####
# Mandatory - The heartbeat is in charge of sending periodic updated to other nodes on the network,
# checking the messages cache and keeping a track of all nodes statuses.
# The heartbeat frequency in seconds.
heartbeat_seconds = 5

# Mandatory - The frequency of sending a routing update packets to the known neighbours. Examples:
# 1 = send an update once each heartbeat.
# 3 = send an update once per 3 heartbeats.
update_heartbeat_frequency = 1

# Mandatory - If we haven't received any message or update packet from a single node during the amount
# of heartbeats defined here, the node will be considered offline.
nodes_online_check_heartbeat_frequency = 3

# Mandatory - How frequently the application will resend unacknowledged packets. Examples:
# 1 = try sending an unacknowledged packet during each heartbeat.
# 3 = try sending an unacknowledged packet once every 3 heartbeats.
message_resend_heartbeat_frequency = 1

# Mandatory - Packet resending tries. Examples:
# 0 = don't try to resend any packets. Send it once and forget.
# 3 = try to resend an unacknowledged packet three times to its destination, then discard the packet.
message_resend_tries = 1

# Mandatory - How frequently the application will check for not fully received messages.
# The incoming message will be checked on whether or not all of its segments have arrived.
message_receive_check_heartbeat_frequency = 1

# Mandatory - How long not fully received message should be kept for. After this amount of heartbeats
# the message will be discarded.
message_receive_expired_heartbeats = 4


##### Connection settings #####
# Optional - The local ip address of an interface the device uses to send or receive network packets.
# If it isn't set then the default interface will be used for defining sockets local address.
ip = 192.168.1.100

# Optional - The UDP port which will be used for listening the incoming UDP traffic.
# If it isn't set then the only way to connect to this node will be to get discovered
# by some neighbour by sending an update packets to it and then let it capture out port.
# This way the application can be used even if there is no possibility to open an UDP port.
port = 32002

# Optional - This address must be set when there is a UDP port defined above. This can be used
# to limit the incoming connections to specific network or address. All other connections
# from addresses outside this scope will be dropped.
limit = 0.0.0.0

# Mandatory - My username.
username = USER1

# Mandatory - My public key.
public = 370a2172b8b5ee1a93a50e7cc6f5db80d120e5190f09f9583b975da57ccc7925

# Mandatory - My private key.
private = 21249251adc3e0f2ee5229c9c30d3d814f3d23ef1968d4bd12d86a66cebfd334


##### Known nodes definition #####
# Every known node should be described as a separate menu section containing its name.
[FURKAN]
# Optional - Nodes IP address.
# If this is not set, then the node will not be considered as our direct neighbour (at first).
# The only way to start a conversations with a node like this is to receive some packet from it
# and capture its IP address and port.
# ip =

# Optional - Nodes UDP port.
# port =

# Mandatory - Each known node should have its public key. Otherwise we would not be able to decrypt
# its messages.
public = 84eee45ace8e5ba1cb4f27b2fccb653fb6bf6d6e56a7e0b741b25a49e9b1a501

[MOBILE]
public = eeb07798e22e1897aae8e992402d506f23739a2560e3591a1ded8aef1e95211f
